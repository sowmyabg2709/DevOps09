# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- task: SonarCloudPrepare@3
  inputs:
    SonarQube: 'SonarQube Cloud'
    organization: 'shilpaarali'
    scannerMode: 'dotnet'
    dotnetScannerVersion: '10.1.2.114627'
    projectKey: 'ShilpaArali_MyCloudApp'
    projectName: 'MyCloudApp'
- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'Snyk Integration'
    testType: 'code'
    failOnIssues: true
    projectName: 'ShilpaArali/MyCloudApp:MyCloudApp/MyCloudApp.csproj'
    organization: 'f8754760-5e1d-4898-8dbf-ff6350ce70eb'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Mycloudwebapp'

